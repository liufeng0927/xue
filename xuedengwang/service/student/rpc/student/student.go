// Code generated by goctl. DO NOT EDIT!
// Source: student.proto

package student

import (
	"context"

	"xuedengwang/service/student/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddStudentReq        = pb.AddStudentReq
	DeleteStudentByIDReq = pb.DeleteStudentByIDReq
	GetStudentByIDReq    = pb.GetStudentByIDReq
	GetStudentByIDResp   = pb.GetStudentByIDResp
	GetStudentReq        = pb.GetStudentReq
	GetStudentResp       = pb.GetStudentResp
	StudentDao           = pb.StudentDao
	StudentInterface     = pb.StudentInterface
	UpdateStudentReq     = pb.UpdateStudentReq

	Student interface {
		GetStudent(ctx context.Context, in *GetStudentReq, opts ...grpc.CallOption) (*GetStudentResp, error)
		GetStudentByID(ctx context.Context, in *GetStudentByIDReq, opts ...grpc.CallOption) (*GetStudentByIDResp, error)
		UpdateStudent(ctx context.Context, in *UpdateStudentReq, opts ...grpc.CallOption) (*StudentInterface, error)
		AddStudent(ctx context.Context, in *AddStudentReq, opts ...grpc.CallOption) (*StudentInterface, error)
		DeleteStudentByID(ctx context.Context, in *DeleteStudentByIDReq, opts ...grpc.CallOption) (*StudentInterface, error)
	}

	defaultStudent struct {
		cli zrpc.Client
	}
)

func NewStudent(cli zrpc.Client) Student {
	return &defaultStudent{
		cli: cli,
	}
}

func (m *defaultStudent) GetStudent(ctx context.Context, in *GetStudentReq, opts ...grpc.CallOption) (*GetStudentResp, error) {
	client := pb.NewStudentClient(m.cli.Conn())
	return client.GetStudent(ctx, in, opts...)
}

func (m *defaultStudent) GetStudentByID(ctx context.Context, in *GetStudentByIDReq, opts ...grpc.CallOption) (*GetStudentByIDResp, error) {
	client := pb.NewStudentClient(m.cli.Conn())
	return client.GetStudentByID(ctx, in, opts...)
}

func (m *defaultStudent) UpdateStudent(ctx context.Context, in *UpdateStudentReq, opts ...grpc.CallOption) (*StudentInterface, error) {
	client := pb.NewStudentClient(m.cli.Conn())
	return client.UpdateStudent(ctx, in, opts...)
}

func (m *defaultStudent) AddStudent(ctx context.Context, in *AddStudentReq, opts ...grpc.CallOption) (*StudentInterface, error) {
	client := pb.NewStudentClient(m.cli.Conn())
	return client.AddStudent(ctx, in, opts...)
}

func (m *defaultStudent) DeleteStudentByID(ctx context.Context, in *DeleteStudentByIDReq, opts ...grpc.CallOption) (*StudentInterface, error) {
	client := pb.NewStudentClient(m.cli.Conn())
	return client.DeleteStudentByID(ctx, in, opts...)
}
