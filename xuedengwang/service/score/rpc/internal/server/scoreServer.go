// Code generated by goctl. DO NOT EDIT.
// Source: scores.proto

package server

import (
	"context"

	"xuedengwang/service/score/rpc/internal/logic"
	"xuedengwang/service/score/rpc/internal/svc"
	"xuedengwang/service/score/rpc/pb"
)

type ScoreServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedScoreServer
}

func NewScoreServer(svcCtx *svc.ServiceContext) *ScoreServer {
	return &ScoreServer{
		svcCtx: svcCtx,
	}
}

func (s *ScoreServer) GetScores(ctx context.Context, in *pb.GetScoresReq) (*pb.GetScoresResp, error) {
	l := logic.NewGetScoresLogic(ctx, s.svcCtx)
	return l.GetScores(in)
}

func (s *ScoreServer) UpdateScores(ctx context.Context, in *pb.UpdateScoresReq) (*pb.ScoresInterface, error) {
	l := logic.NewUpdateScoresLogic(ctx, s.svcCtx)
	return l.UpdateScores(in)
}

func (s *ScoreServer) AddScores(ctx context.Context, in *pb.AddScoresReq) (*pb.ScoresInterface, error) {
	l := logic.NewAddScoresLogic(ctx, s.svcCtx)
	return l.AddScores(in)
}

func (s *ScoreServer) DeleteScoresByID(ctx context.Context, in *pb.DeleteScoresByIDReq) (*pb.ScoresInterface, error) {
	l := logic.NewDeleteScoresByIDLogic(ctx, s.svcCtx)
	return l.DeleteScoresByID(in)
}

func (s *ScoreServer) GetScoreCensus(ctx context.Context, in *pb.GetScoreCensusReq) (*pb.GetScoreCensusResp, error) {
	l := logic.NewGetScoreCensusLogic(ctx, s.svcCtx)
	return l.GetScoreCensus(in)
}

func (s *ScoreServer) GetScoresContrastCensus(ctx context.Context, in *pb.GetScoresContrastCensusReq) (*pb.GetScoresContrastCensusResp, error) {
	l := logic.NewGetScoresContrastCensusLogic(ctx, s.svcCtx)
	return l.GetScoresContrastCensus(in)
}
