// Code generated by goctl. DO NOT EDIT.
// Source: scores.proto

package score

import (
	"context"

	"xuedengwang/service/score/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddScoresReq                = pb.AddScoresReq
	Census                      = pb.Census
	Course                      = pb.Course
	DateType                    = pb.DateType
	DeleteScoresByIDReq         = pb.DeleteScoresByIDReq
	GetScoreCensusReq           = pb.GetScoreCensusReq
	GetScoreCensusResp          = pb.GetScoreCensusResp
	GetScoresContrastCensusReq  = pb.GetScoresContrastCensusReq
	GetScoresContrastCensusResp = pb.GetScoresContrastCensusResp
	GetScoresReq                = pb.GetScoresReq
	GetScoresResp               = pb.GetScoresResp
	GradeClass                  = pb.GradeClass
	ScoresContrastCensus        = pb.ScoresContrastCensus
	ScoresDao                   = pb.ScoresDao
	ScoresInterface             = pb.ScoresInterface
	Student                     = pb.Student
	UpdateScoresReq             = pb.UpdateScoresReq

	Score interface {
		GetScores(ctx context.Context, in *GetScoresReq, opts ...grpc.CallOption) (*GetScoresResp, error)
		UpdateScores(ctx context.Context, in *UpdateScoresReq, opts ...grpc.CallOption) (*ScoresInterface, error)
		AddScores(ctx context.Context, in *AddScoresReq, opts ...grpc.CallOption) (*ScoresInterface, error)
		DeleteScoresByID(ctx context.Context, in *DeleteScoresByIDReq, opts ...grpc.CallOption) (*ScoresInterface, error)
		GetScoreCensus(ctx context.Context, in *GetScoreCensusReq, opts ...grpc.CallOption) (*GetScoreCensusResp, error)
		GetScoresContrastCensus(ctx context.Context, in *GetScoresContrastCensusReq, opts ...grpc.CallOption) (*GetScoresContrastCensusResp, error)
	}

	defaultScore struct {
		cli zrpc.Client
	}
)

func NewScore(cli zrpc.Client) Score {
	return &defaultScore{
		cli: cli,
	}
}

func (m *defaultScore) GetScores(ctx context.Context, in *GetScoresReq, opts ...grpc.CallOption) (*GetScoresResp, error) {
	client := pb.NewScoreClient(m.cli.Conn())
	return client.GetScores(ctx, in, opts...)
}

func (m *defaultScore) UpdateScores(ctx context.Context, in *UpdateScoresReq, opts ...grpc.CallOption) (*ScoresInterface, error) {
	client := pb.NewScoreClient(m.cli.Conn())
	return client.UpdateScores(ctx, in, opts...)
}

func (m *defaultScore) AddScores(ctx context.Context, in *AddScoresReq, opts ...grpc.CallOption) (*ScoresInterface, error) {
	client := pb.NewScoreClient(m.cli.Conn())
	return client.AddScores(ctx, in, opts...)
}

func (m *defaultScore) DeleteScoresByID(ctx context.Context, in *DeleteScoresByIDReq, opts ...grpc.CallOption) (*ScoresInterface, error) {
	client := pb.NewScoreClient(m.cli.Conn())
	return client.DeleteScoresByID(ctx, in, opts...)
}

func (m *defaultScore) GetScoreCensus(ctx context.Context, in *GetScoreCensusReq, opts ...grpc.CallOption) (*GetScoreCensusResp, error) {
	client := pb.NewScoreClient(m.cli.Conn())
	return client.GetScoreCensus(ctx, in, opts...)
}

func (m *defaultScore) GetScoresContrastCensus(ctx context.Context, in *GetScoresContrastCensusReq, opts ...grpc.CallOption) (*GetScoresContrastCensusResp, error) {
	client := pb.NewScoreClient(m.cli.Conn())
	return client.GetScoresContrastCensus(ctx, in, opts...)
}
